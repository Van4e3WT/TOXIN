//- *********** header ***********

mixin link(ref, name, isExtended=false)
    a(class="header__item",href=""+ref)=name
        if isExtended
            .arrow-down

//- *********** footer ***********

mixin refItem(ref, name)
    li.ref__item
        a(href=ref)=name

mixin socialReference(ref, name)
    .copyrights__link
        a(href=ref)
            img(src="./assets/images/" + name + "Logo.svg", alt=name, height="30px", width="30px")

//- *********** other ***********

mixin button(ref, content, classRef, classBtn)
    a(class=classRef, href=ref)
        .button(class=classBtn)=content

mixin logo()
    a(href="/").logo
        .logo__img
            img(src="./assets/images/LogoImg.svg", alt="TOXIN")
        .logo__name
            img(src="./assets/images/LogoName.svg", alt="TOXIN")

mixin helpInfo(description)
    .help-info(data-prompt=description) i

mixin dropdownGuests(defVals, isOpen)
    .dropdown(wordforms="гость, гостя, гостей")
        input(default="Сколько гостей", class="dropdown__output", type="text", readonly)
        .dropdown__list(class = isOpen?"active":"")
            each item, key in ["Взрослые", "Дети", "Младенцы"]
                .dropdown__item
                    .type=item
                    .counter-block
                        .counter-block__minus(class=key?"":"disabled") -
                        .counter-block__counter=defVals ? defVals[key] : 0
                        .counter-block__plus +
            .dropdown__buttons
                .dropdown__clear-btn.button.skeleton-button Очистить
                .dropdown__apply-btn.button.skeleton-button Применить

mixin dropdownAddOptions(defVals, isOpen)
    .dropdown.options(several-word-forms)
        input(default="Вспомогательные удобства", class="dropdown__output", type="text", readonly)
        .dropdown__list(class = isOpen?"active":"")
            each item, key in [["спальня, спальни, спален", "спальни"], ["кровать, кровати, кроватей", "кровати"], ["ванная комната, ванные комнаты, ванных комнат", "ванные комнаты"]]
                .dropdown__item(wordforms=item[0])
                    .type=item[1]
                    .counter-block
                        .counter-block__minus(class=key?"":"disabled") -
                        .counter-block__counter=defVals?defVals[key]:0
                        .counter-block__plus +

mixin twinDatepick(label1, label2)
    .twin-datepick
        .twin-datepick__item
            label=label1
            input(type="text", class="dateArrival", placeholder="ДД.ММ.ГГГГ", name="date-arrival", data-range="true", readonly)
        .twin-datepick__item
            label=label2
            input(type="text", class="dateDeparture" placeholder="ДД.ММ.ГГГГ", name="date-departure", data-range="true", readonly)

mixin dateSoloRange()
    .date-solo-range
        input(type="text", name="filterdatedropdown", class="dateSoloRange", data-range="true", data-date-format="dd M", data-multiple-dates-separator=" - ", readonly)

mixin formSubscribe()
    form(action="", method="POST").form-subscribe
        input(type="email", placeholder="Email").form__input
        button(type="submit").form-subscribe__button
            svg(width="25" height="25" viewBox="0 0 18 16" fill="none" xmlns="http://www.w3.org/2000/svg")
                path(d="M9 0.984375L17.0156 9L9 17.0156L7.59375 15.6094L13.1719 9.98438H0.984375V8.01562H13.1719L7.59375 2.39062L9 0.984375Z" fill="url(#paint0_linear)")
                defs
                    linearGradient(id="paint0_linear" x1="9" y1="-13" x2="9" y2="31" gradientUnits="userSpaceOnUse")
                        stop(stop-color="#BC9CFF")
                        stop(offset="1" stop-color="#8BA4F9")

mixin checkbox(content, id, isChecked)
    .checkbox
        input(type="checkbox", id=id, checked=isChecked)
        label(for=id)=content

mixin checkboxRich(content, id, description)
    .checkbox.rich
        input(type="checkbox", id=id)
        label(for=id)=content
        p=description

mixin radiobutton(content, id, name, isChecked)
    .radiobutton
        input(type="radio", name=name, id=id, checked=isChecked)
        label(for=id)=content

mixin togglebutton(content, id, isChecked)
    .togglebutton
        input(type="checkbox", id=id, checked=isChecked)
        label(for=id, class="toggle-wrapper")
        label=content

mixin likebutton(id, count, isChecked)
    .likebutton
        input(type="checkbox", id=id, checked=isChecked)
        label(for=id)=count

mixin ratebutton(name, inputRate, isReadonly)
    .ratebutton
        each i in [5,4,3,2,1]
            input(class="ratebutton__input", type="radio", name=name, id=name+"-"+i, checked= i == inputRate)
            label(class="ratebutton__label", for=name+"-"+i)

mixin rateresult(name, inputRate)
    .rateresult
        each i in [1,2,3,4,5]
            if i <= inputRate
                label ★
            else
                label ☆

mixin rangeslider(name)
    .range-slider
        .range-slider__text
            label=name
            .range-slider__range
                span.range-slider__min 5000₽
                span.range-slider__splitter &nbsp;-&nbsp;
                span.range-slider__max 10000₽
        .slider
            input(type="range", class="rangeSliderLeft-here", min=0, max = 15000, step = 100, value=5000)
            input(type="range", class="rangeSliderRight-here", min=0, max = 15000, step = 100, value=10000)
            .slider__custom-slider
                .slider__track
                .slider__range
                .slider__thumb.left
                .slider__thumb.right

mixin paginationPlug(pages, page)
    .pagination(id="pagination-block")
        .pagination__items
            each i in [0,1,2,3,4,5]
                if i == 0
                    .pagination__item.active=page+i
                else if i == 3
                    .pagination__item="..."
                else if i == 4
                    .pagination__item=pages
                else if i == 5
                    .pagination__item.arrow
                else
                    .pagination__item=page+i
        .pagination__info 1 – 12 из 100+ вариантов аренды

mixin dropdownChecks(title, id, isOpen, checkboxes)
    .dropdown-checkbox
        .dropdown-checkbox__title(class=isOpen?"active":"")
            label=title
        .dropdown-checkbox__list
            each i in checkboxes
                if typeof i === "string"
                    +checkbox(i, id+"__"+i, false)
                else
                    +checkbox(i[0], id+"__"+i, i[1])

mixin bulletList(bullets)
    ul.bullet-list
        each bullet in bullets
            li.bullet-list__item=bullet

mixin privilegeElement(ref, title, description)
    .privilege
        .privilege__img
            img(src=ref, height="54px", width="54px")
        .privilege__text
            label=title
            p=description

mixin comment(avatar, username, date, likes, isLiked, description)
    .comment
        .comment__header
            img(src=avatar, height="54px", width="54px")
            .comment__user
                label=username
                .comment__date=date
        .comment__body
            .comment_like
                +likebutton(username+"__likebtn", likes, isLiked)
            .comment__description=description

//- *********** Cards ***********

mixin landingCard()
    .landing-card
        h1 Найдём номера под ваши пожелания
        form.landing-card__form(action="", method="post")
            +twinDatepick("Прибытие", "Выезд")
            label Гости
            +dropdownGuests()
        +button("#", "Подобрать номер", "", "send-button")

mixin registerCard()
    .register-card
        h1 Регистрация аккаунта
        .register-card__group
            input(type="text", name="name", placeholder="Имя")
            input(type="text", name="surname", placeholder="Фамилия")
            .radiobutton-group
                +radiobutton("Мужчина", "isManRegistration", "sexRegistration", true)
                +radiobutton("Женщина", "isWomanRegistration", "sexRegistration", false)
        .register-card__birthday
            label Дата рождения
            input(type="text", name="birthday", class="dateSolo", placeholder="ДД.ММ.ГГГГ", readonly)
        .register-card__group
            label Данные для входа в сервис
            input(type="email", name="email" placeholder="Email")
            input(type="password", name="password" placeholder="Пароль")
            +togglebutton("Получать спецпредложения", id="subscribeRegistration", false)
        +button("#", "Зарегистрироваться", "", "send-button")
        .register-card__help
            p Уже есть аккаунт на Toxin
            +button("#", "Войти", "", "ghost-button")

mixin totalCard()
    .total-card
        .total-card__header
            .number
                label.number__prefix №
                h1.number__value 888
                label.number__lux люкс
            .cost
                label.cost__rubles 9990₽
                p.cost__period в сутки
        .total-card__body
            +twinDatepick("Прибытие", "Выезд")
            label Гости
            +dropdownGuests()
            .calculate
                .calculate__item.base
                    .base__position
                        span.base__period-cost 9&nbsp;990₽
                        span.base__split &nbsp;x&nbsp;
                        span.base__peroid-value 4 суток
                    p.base__cost 39&nbsp;960₽
                .calculate__item.service
                    .service__position
                        .service__wrapper
                            span.service__prefix Сбор за услуги:&nbsp;
                            span.service__servises скидка 2&nbsp;179₽
                        +helpInfo("Всплывающая подсказка")
                    p.service__cost 0₽
                .calculate__item.additional-service
                    .additional-service__position
                        span.additional-service__prefix Сбор за дополнительные услуги
                        +helpInfo("Всплывающая подсказка")
                    p.additional-service__cost 300₽
        .total-card__total
            .total
                h2.total__result Итого
                .total__space
                h2.total__cost 38081₽
        +button("#", "Забронировать", "", "send-button")

mixin loginCard()
    .login-card
        h1 Войти
        .login-card__fields
            input(type="email", name="email" placeholder="Email")
            input(type="password", name="password" placeholder="Пароль")
        +button("#", "Войти", "", "send-button")
        .login-card__help
            p Нет аккаунта на Toxin?
            +button("#", "Создать", "", "ghost-button")


//- *********** Headers and Footers ***********

mixin header(isAuthorized)
    header
        .container
            .header
                .header__description
                    +logo()
                    .header__burger
                        span
                .header__section
                    +link("#about", "О\xA0нас")
                    //- Неразрывный пробел JS \xA0
                    +link("#office", "Услуги", true)
                    +link("#vacancies", "Вакансии")
                    +link("#news", "Новости")
                    +link("#deals", "Соглашения", true)
                    if isAuthorized
                        .header__item
                            .header__user Юлий Цезарь
                    else
                        +button("#", "Войти", "header__item", "ghost-button")
                        +button("registration.html", "Зарегистрироваться", "header__item")

mixin footer()
    footer.footer
        .container
            .ref
                .ref__column
                    .ref__logo
                        +logo()
                    .ref__text
                        p 
                        | Бронирование номеров в лучшем 
                        br
                        | отеле 2019 года по версии
                        br
                        | ассоциации «Отельные взгляды»
                ul.ref__column 
                    .ref__item Навигация
                    +refItem("#about", "О нас")
                    +refItem("#news", "Новости")
                    +refItem("#support", "Служба поддержки")
                    +refItem("#office", "Услуги")
                ul.ref__column 
                    .ref__item О&nbsp;нас
                    +refItem("#service", "О сервисе")
                    +refItem("#company", "Наша команда")
                    +refItem("#vacancies", "Вакансии")
                    +refItem("#investors", "Инвесторы")
                ul.ref__column
                    .ref__item Служба&nbsp;поддержки
                    +refItem("#deals", "Соглашения")
                    +refItem("#community", "Сообщества")
                    +refItem("#connect", "Связь с нами")
                .ref__column
                    .ref__item Подписка
                    .ref__text
                        p Получайте специальные предложения и новости сервиса
                    +formSubscribe()
        .copyrights
            .container
                .copyrights__content
                    .copyrights__copyright
                        p Copyright © 2018 Toxin отель. Все права защищены.
                    .copyrights__social
                        +socialReference("#twitter", "twitter")
                        +socialReference("#facebook", "facebook")
                        +socialReference("#instagram", "instagram")

mixin footerMobile()
    footer.footer-mobile
        .footer-mobile__copyrights
            .footer-mobile__logo
                +logo()
            .footer-mobile__text
                p Copyright © 2018 Toxin отель. Все права защищены.
            .footer-mobile__socials
                +socialReference("#twitter", "twitter")
                +socialReference("#facebook", "facebook")
                +socialReference("#instagram", "instagram")

//- *********** UI-kit ***********

mixin svgUI()
    svg(width="145" height="145" viewBox="0 0 48 48" fill="none" xmlns="http://www.w3.org/2000/svg" style="padding:40px;")
        path(d="M23.9989 32.4712C23.2224 32.4712 22.5871 31.8359 22.5871 31.0594C22.5871 25.6241 18.14 21.177 12.7047 21.177C11.9283 21.177 11.293 20.5418 11.293 19.7653C11.293 18.9888 11.9283 18.3535 12.7047 18.3535C19.7283 18.3535 25.4106 24.0359 25.4106 31.0594C25.4106 31.8359 24.7753 32.4712 23.9989 32.4712Z" fill="#1F2041" fill-opacity="0.25")
        path(d="M36.7068 19.7653C36.7068 20.5418 36.0715 21.177 35.295 21.177C31.9421 21.177 28.9421 22.8712 27.1774 25.4476C26.7892 24.4594 26.3303 23.5418 25.7656 22.6947C28.095 20.0123 31.5186 18.3535 35.295 18.3535C36.0715 18.3535 36.7068 18.9888 36.7068 19.7653Z" fill="#1F2041" fill-opacity="0.25")
        path(d="M24 48C10.7647 48 0 37.2353 0 24C0 10.7647 10.7647 0 24 0C37.2353 0 48 10.7647 48 24C48 37.2353 37.2353 48 24 48ZM24 2.82353C12.3176 2.82353 2.82353 12.3176 2.82353 24C2.82353 35.6824 12.3176 45.1765 24 45.1765C35.6824 45.1765 45.1765 35.6824 45.1765 24C45.1765 12.3176 35.6824 2.82353 24 2.82353Z" fill="#1F2041" fill-opacity="0.25")
mixin color-itemUI(color, name, opacity)
    .colors-and-fonts__color-item
        .colors-and-fonts__color-example(style="background-color: " + color + "; opacity: " + opacity + ";")
        .colors-and-fonts__color-description
            h2=name
            p=color

